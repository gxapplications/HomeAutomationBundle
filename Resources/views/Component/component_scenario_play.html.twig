{% extends "GXHomeAutomationBundle:Component:component_base.html.twig" %}


{% block card_css %}ng-class="{'gridlist-card md-whiteframe-6dp': editMode.show}"{% endblock %}
{% block card_progress_bar %}{% endblock %}

{% block html_content %}
	<md-button class="md-raised md-primary component-button" flex
			   ng-disabled="{% if component.getForeignId1 is null %}true{% else %}(button.state == 1){% endif %}"
			   ng-class="{'md-hue-3': (button.state == 3), 'md-hue-1': (button.state == 2)}"
			   ng-click="button.scenarioPlay()">
		<div layout="row" layout-align="space-around center">
			<md-icon aria-label="custom" class="material-icons button-icon-48">pan_tool</md-icon>
			<div layout="column">
				<h2 style="text-overflow: ellipsis; white-space: normal;">
					{{ component.title }}
				</h2>
				{% if component.description %}
					<div class="description" style="text-transform: none;text-overflow: ellipsis; white-space: normal;">
						{{ component.description }}
					</div>
				{% endif %}
			</div>
		</div>
		<div class="card-progress-linears" style="position:absolute; bottom:0; left:0; right:0">
			<md-progress-linear md-mode="determinate" class="{{ '{{' }}refresher.hue{{ '}}' }}" ng-class="{'md-hue-2': (button.state == 0), 'md-hue-3': (button.state == 2)}" ng-show="refresher.percent<=100" value="{{ '{{ ' }}refresher.percent{{ '}}' }}"></md-progress-linear>
			<md-progress-linear md-mode="indeterminate" class="{{ '{{' }}refresher.hue{{ '}}' }}" ng-class="{'md-hue-2': (button.state == 0), 'md-hue-3': (button.state == 2)}" ng-hide="refresher.percent<=100"></md-progress-linear>
		</div>
	</md-button>
{% endblock %}

{% block controller_script %}
	$scope.button = {
		state: 1,
		scenarioPlay: function() {
			if (!$scope.component.foreign_id_1) {
				$scope.button.state = -1;
				return;
			}

			// waiting for server response, so clean state
			$scope.button.state = 1;
			var now = (Date.now()/1000);
			var ts = now + ($scope.component.delay_1*60);

			$http.post(($scope.component.delay_1 > 0)? '{{ path("_set_schedule_myfox") }}' : '{{ path("_set_sync_myfox") }}', {
				home_key: $scope.myfox.home_key,
				command: 'CMD_SET_SCENARIO_PLAY',
				parameters: { '%scenario_id%': $scope.component.foreign_id_1 },
				component_update: $scope.component.id,
				when: ts,
				last_action: now
			}).
			success(function(data) {
				// error in the success result...
				if (data.status != "OK") {
					$rootScope.notifications.postError('Scenario Play action error!');
					$scope.button.state = -1;
					return;
				}

				// compute state
				$scope.button.state = (Date.now()/1000 < ts)? 2 : ($scope.component.delay_2 > 0)? 3 : 0; // delay or active or normal.
				$scope.component.last_action = now;

				// after scenario play, should schedule second scenario play.
				if ($scope.component.delay_2 > 0) {
					var scenario_id_2 = $scope.component.foreign_id_2;
					if (scenario_id_2 != null && scenario_id_2 != '') {
						$http.post('{{ path("_set_schedule_myfox") }}', {
							home_key: $scope.myfox.home_key,
							command: 'CMD_SET_SCENARIO_PLAY',
							parameters: { '%scenario_id%': scenario_id_2 },
							component_update: $scope.component.id,
							when: ts+($scope.component.delay_2*60),
							last_action: now
						}).
						success(function() {
							if ($scope.component.delay_1 == 0) {
								$scope.refresher.scheduleRefresh($scope.component.delay_2*60, false, '');
							} else {
								$scope.refresher.scheduleRefresh($scope.component.delay_1*60, $scope.component.delay_2*60, '');
							}
						}).
						error(function(/*data, status, headers, config*/) {
							$rootScope.notifications.postError('Scenario Play action error!');
							$scope.button.state = -1;
							return;
						});
					} else {
						if ($scope.component.delay_1 == 0) {
							$scope.refresher.scheduleRefresh($scope.component.delay_2*60, false, '');
						} else {
							$scope.refresher.scheduleRefresh($scope.component.delay_1*60, $scope.component.delay_2*60, '');
						}
					}
				} else if ($scope.component.delay_1 > 0) { // delay_1 exists, delayed scenario play action.
					$scope.refresher.scheduleRefresh($scope.component.delay_1*60, false, '');
				}
			}).
			error(function(/*data, status, headers, config*/) {
				$rootScope.notifications.postError('Scenario Play action error!');
				$scope.button.state = -1;
				return;
			});
		},
		initState: function() {
			var now = Date.now()/1000;
			var lastAction = $scope.component.last_action;
			var delay1 = $scope.component.delay_1*60;
			var delay2 = $scope.component.delay_2*60;
			if (lastAction + delay1 > now) {
				$scope.button.state = 2; // action delayed
				$scope.refresher.scheduleRefresh(lastAction + delay1 - now, false, '');
			} else if (lastAction + delay1 + delay2 > now) {
				$scope.button.state = 3; // activated
				$scope.refresher.scheduleRefresh(lastAction + delay1 + delay2 - now, false, '');
			} else {
				$scope.button.state = 0; // deactivated
			}
		}
	};
	$scope.button.initState();
{% endblock %}


{% block configure_html_content %}
	<form name="componentForm" layout="column" flex layout-fill>
		<section>
			<md-subheader class="md-accent">Scenario Play</md-subheader>
			<md-list layout="column" layout-padding>
				<md-list-item>
					<md-input-container flex>
						<label>Title</label>
						<input ng-model="component.title" required name="component_title" md-maxlength="98" />
					</md-input-container>
				</md-list-item>
				<md-list-item>
					<md-input-container flex>
						<label>{# TODO !108: icon support #}</label>
					</md-input-container>
				</md-list-item>
				<md-list-item>
					<md-input-container flex>
						<label>Description</label>
						<textarea ng-model="component.description" columns="1" md-maxlength="482"></textarea>
					</md-input-container>
				</md-list-item>
				<md-list-item>
					<md-select placeholder="Scenario linked" ng-model="component.foreign_id_1" md-on-open="myfox.loadScenarii()" flex>
						<md-option ng-value="scenario.scenarioId" ng-repeat="scenario in myfox.onDemandScenarii">{{ '{{' }}scenario.label{{ '}}' }}</md-option>
					</md-select>
				</md-list-item>
				<md-list-item>
					<md-input-container flex>
						<label>Delayed play action (in minutes)</label>
						<input required type="number" step="any" name="component_delay" ng-model="component.delay_1" min="0" max="1440" required>
						<div ng-messages="componentForm.component_delay.$error">
							<div ng-message="required">If you want immediate play action, please indicate 0.</div>
							<div ng-message="min">Impossible to go back in time, Marty!</div>
							<div ng-message="max">1440 minutes max. Equivalent to 24hrs.</div>
						</div>
					</md-input-container>
				</md-list-item>
			</md-list>
		</section>
		<md-divider></md-divider>
		<section>
			<md-subheader class="md-warn">Options</md-subheader>
			<md-list layout="column" layout-padding>
				<md-list-item>
					<md-radio-group ng-model="component.option_1">
						<md-radio-button value="0" ng-click="component.delay_2=0;component.foreign_id_2=null">None.</md-radio-button>
						<md-radio-button value="1" ng-click="component.foreign_id_2=null">Keep active state for x minutes after played.</md-radio-button>
						<md-radio-button value="2">Play another scenario after x minutes.</md-radio-button>
					</md-radio-group>
				</md-list-item>
				<md-list-item layout="column" style="padding-top: 1em;">
					<md-input-container flex layout-fill layout-align="center start" ng-show="component.option_1=='1'">
						<label>Active state duration (in minutes)</label>
						<input required type="number" step="any" name="component_delay_2" ng-model="component.delay_2" min="1" max="1440" required>
						<div ng-messages="componentForm.component_delay_2.$error">
							<div ng-message="required">If you does not want active state on the button, then choose another option!</div>
							<div ng-message="min">Minimum 1 minute. Cannot work in seconds.</div>
							<div ng-message="max">1440 minutes max. Equivalent to 24hrs.</div>
						</div>
					</md-input-container>
					<div flex ng-show="component.option_1=='2'" layout="row" layout-fill layout-align="center start">
						<md-input-container flex>
							<label>Wait to play second scenario (in minutes)</label>
							<input required type="number" step="any" name="component_delay_2" ng-model="component.delay_2" min="1" max="1440" required>
							<div ng-messages="componentForm.component_delay_2.$error">
								<div ng-message="required">If you does not want to delay a second scenario, then choose another option!</div>
								<div ng-message="min">Minimum 1 minute. Cannot work in seconds.</div>
								<div ng-message="max">1440 minutes max. Equivalent to 24hrs.</div>
							</div>
						</md-input-container>
						<md-select placeholder="Scenario linked" ng-model="component.foreign_id_2" md-on-open="myfox.loadScenarii()" flex>
							<md-option ng-value="scenario.scenarioId" ng-repeat="scenario in myfox.onDemandScenarii">{{ '{{' }}scenario.label{{ '}}' }}</md-option>
						</md-select>
					</div>
				</md-list-item>
			</md-list>
		</section>
	</form>
{% endblock %}
