.controller("LayoutControls", function($rootScope, $scope, $http, $mdDialog) {
	    
   	// layout URL system
	var random = Math.random();
	$scope.layout_loading = false;
	var getLayoutUrl = function() {
		return "{{ path('_home_layout_show', { 'page_id': page.id }) }}?r=" + random;
	}
	$scope.layout_url = getLayoutUrl();
	var commit_url = "{{ path('_home_layout_commit', { 'page_id': page.id }) }}";
	var change_url = "{{ path('_home_layout_change', { 'page_id': page.id }) }}";
	var add_component_url = "{{ path('_component_add', { 'page_id': page.id }) }}";
	var sort_component_url = "{{ path('_component_sort', { 'page_id': page.id }) }}";
	
   	// support for editMode event
   	$scope.editMode = false;
	$scope.$on('editModeChange', function(event, editMode) {
		$scope.editMode = editMode;
		if (!editMode) {
			
			$http.post(commit_url, {containers: $scope.containers}).
			  success(function(data, status, headers, config) {
				// nothing to do now...
			  }).
			  error(function(data, status, headers, config) {
			    $rootScope.$broadcast('CommitError', data, status);
			  });
			
		}
	});
	
	// layout change broadcast: refresh it
	$scope.$on('LayoutChange', function(event, newLayout) {
		$scope.layout_loading = true;
		
		$http.post(change_url, {layout: newLayout.id}).
		  success(function(data, status, headers, config) {
			random = Math.random();
			$scope.layout_url = getLayoutUrl();
		  }).
		  error(function(data, status, headers, config) {
			$rootScope.$broadcast('CommitError', data, status);
		  });
		
	});
	$scope.$on('LayoutRefresh', function(event) {
		$scope.layout_loading = true;
		random = Math.random();
		$scope.layout_url = getLayoutUrl();
	});
	
	// inside layouts
	$scope.layoutLoaded = function() {
		$scope.layout_loading = false;
		$('md-content.page-layout gx-element').each(function(index, element) {
			var key = $(element).attr('key');
			$scope.elements[key] = $.parseJSON($(element).attr('data-json'));
		});
		
		// component add forms
		$('md-content.page-layout form.new_component').each(function(index, element) {
			$('button', element).click(function() {
				
				$http.post(add_component_url, {container_id: $(element).attr('gx-container'), type: $('select',element).val()}).
				  success(function(data, status, headers, config) {
					if (!data) $rootScope.$broadcast('CommitError', '', -1);
					else componentEditDialog(data, $(element).attr('gx-container'), $mdDialog, $rootScope, $http);
				  }).
				  error(function(data, status, headers, config) {
					$rootScope.$broadcast('CommitError', data, status);
				  });
				
			});
		});
		
		// component drag & drops
		$('md-content.page-layout gx-element').sortable({
			handle: 'div.component-handler',
			connectWith: 'md-content.page-layout gx-element, #delete-dropzone, #edit-dropzone',
			placeholder: 'component-placeholder',
			zIndex: 9999,
			update: function(event, ui) {
				
				$http.post(sort_component_url, {container_id: $(this).attr('container-id'), ids: $(this).sortable('toArray')}).
				  success(function(data, status, headers, config) {
					// nothing to do now...
				  }).
				  error(function(data, status, headers, config) {
					$rootScope.$broadcast('CommitError', data, status);
				  });
				
			}
		}).disableSelection();
		
		$scope.refreshComponents();
	};
	
	// Containers
	$scope.containers = {
		border_0: 0,
		border_1: 0,
		border_2: 0,
		border_3: 0,
		border_4: 0,
		border_5: 0,
		title_0: '',
		title_1: '',
		title_2: '',
		title_3: '',
		title_4: '',
		title_5: ''
	};
	
	{{ include('GXHomeAutomationBundle:Component:ng-controller-part.js.twig') }}
	
});

function componentEditDialog(component_id, container_id, $mdDialog, $rootScope, $http) {
	var ts = Date.now();
	$mdDialog.show({
      controller: EditDialogController,
      templateUrl: '{{ path("_component_edit_dialog", { "component_id": "" }) }}'+component_id+'?_='+ts,
      clickOutsideToClose: false,
      escapeToClose: false
    })
    .then(function(answer) {
      $rootScope.$broadcast('LayoutRefresh');
//      if (container_id != null) {
//    	  // we need to refresh container, but does not known twig template to choose (vertical/horizontal/else). So for now, refresh all layout.
//    	  $rootScope.$broadcast('LayoutRefresh');
//      } else {
//    	  // If we refresh only component, Angular does not compile elements in the new DOM node... So for now, refresh all layout.
//    	  $rootScope.$broadcast('LayoutRefresh');
//    	  $http.get('{{ path("_component_show", { "component_id": "" }) }}'+component_id).
//			  success(function(data, status, headers, config) {
//				$('md-content[component-id="'+component_id+'"]').replaceWith(data);
//			  }).
//			  error(function(data, status, headers, config) {
//			    $rootScope.$broadcast('CommitError', data, status);
//			  });
//    	  
//      }
    }, function() {
      // Edition cancelled by user: no refresh here
    });
}

function EditDialogController($scope, $mdDialog, $http, $rootScope) {
	var commit_url = "";
	$scope.component = {
		id: -1,
		title: "",
		description: "",
		icon: "",
		scenario_id: "",
	};
	$scope.hide = function() { $mdDialog.hide(); };
	$scope.cancel = function() { $mdDialog.cancel(); };
	$scope.save = function() {
		
		$http.post('{{ path("_component_commit", { "component_id": "" }) }}'+$scope.component.id, {component: $scope.component}).
		  success(function(data, status, headers, config) {
			  $mdDialog.hide('saved');
		  }).
		  error(function(data, status, headers, config) {
		    $rootScope.$broadcast('CommitError', data, status);
		    $mdDialog.hide('error');
		  });
		
	};
}

